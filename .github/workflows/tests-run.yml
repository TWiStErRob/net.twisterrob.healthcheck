on:

  workflow_call:
    inputs:
      name:
        description: 'Display name and artifact name'
        required: true
        type: string

      test-task:
        description: 'Gradle test task(s) to run'
        required: true
        type: string
        default: ':test'

      test-pattern:
        description: 'https://docs.gradle.org/current/userguide/java_testing.html#test_filtering'
        required: true
        type: string
        default: '*'

jobs:
  all-test:
    name: "${{ inputs.name }}"
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v4

      - name: "Validate Gradle Wrapper JARs."
        uses: gradle/wrapper-validation-action@v1

      - name: "Set up JDK 17."
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu

      - name: "List dependency versions."
        run: |
          ./gradlew --version
          google-chrome --version

      - name: "Run ${{ inputs.name }} (${{ inputs.test-pattern }}) Tests."
        run: >
          ./gradlew
          --no-daemon
          --stacktrace
          ${{ inputs.test-task }} --tests "${{ inputs.test-pattern }}"
          -Pnet.twisterrob.test.selenium.headless=true

      - name: "Upload 'Test ${{ inputs.name }} Results XMLs' artifact."
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: 'Test ${{ inputs.name }} Results XMLs'
          path: ${{ github.workspace }}/build/test-results/*/TEST-*.xml

      - name: "Upload 'Test ${{ inputs.name }} Results HTML' artifact."
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: 'Test ${{ inputs.name }} Results HTML'
          path: ${{ github.workspace }}/build/reports/tests/*/

      - name: "Publish 'Results / ${{ inputs.name }}' check suite."
        if: success() || failure()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: 'Results / ${{ inputs.name }}'
          comment_mode: off
          report_individual_runs: true
          test_changes_limit: 0
          junit_files: ${{ github.workspace }}/build/test-results/*/TEST-*.xml
